<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gec.dao.OrdersMapper">

    <resultMap id="BaseResultMap" type="com.gec.bean.Orders">
        <id property="oid" column="oid" jdbcType="VARCHAR"/>
        <result property="ordertime" column="ordertime" jdbcType="TIMESTAMP"/>
        <result property="total" column="total" jdbcType="DOUBLE"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="telephone" column="telephone" jdbcType="VARCHAR"/>
        <result property="uid" column="uid" jdbcType="VARCHAR"/>
        <result property="assess" column="assess" jdbcType="VARCHAR"/>
        <collection property="orderItems" resultMap="OrderItemListResultMap"/>
    </resultMap>

    <resultMap id="OrderItemListResultMap" type="com.gec.bean.Orderitem">
        <id property="itemid" column="itemid" jdbcType="VARCHAR"/>
        <result property="count" column="count" jdbcType="INTEGER"/>
        <result property="subtotal" column="subtotal" jdbcType="DOUBLE"/>
        <result property="pid" column="pid" jdbcType="VARCHAR"/>
        <result property="oid" column="oid" jdbcType="VARCHAR"/>
        <!--association用于一对一、多对一场景使用。-->
        <association property="product" javaType="com.gec.bean.Product">
            <id property="pid" column="pid" jdbcType="VARCHAR"/>
            <result property="pname" column="pname" jdbcType="VARCHAR"/>
            <result property="marketPrice" column="market_price" jdbcType="DOUBLE"/>
            <result property="shopPrice" column="shop_price" jdbcType="DOUBLE"/>
            <result property="pimage" column="pimage" jdbcType="VARCHAR"/>
            <result property="pdate" column="pdate" jdbcType="DATE"/>
            <result property="isHot" column="is_hot" jdbcType="INTEGER"/>
            <result property="pdesc" column="pdesc" jdbcType="VARCHAR"/>
            <result property="pflag" column="pflag" jdbcType="INTEGER"/>
            <result property="cid" column="cid" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <sql id="Base_Column_List">
        oid
        ,ordertime,total,
        state,address,name,
        telephone,uid,assess
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from orders
        where oid = #{oid,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from orders
        where oid = #{oid,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" keyColumn="oid" keyProperty="oid" parameterType="com.gec.bean.Orders" useGeneratedKeys="true">
        insert into orders
        ( oid, ordertime, total
        , state, address, name
        , telephone, uid, assess)
        values ( #{oid,jdbcType=VARCHAR}, #{ordertime,jdbcType=TIMESTAMP}, #{total,jdbcType=DOUBLE}
               , #{state,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}
               , #{telephone,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{assess,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="oid" keyProperty="oid" parameterType="com.gec.bean.Orders"
            useGeneratedKeys="true">
        insert into orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="oid != null">oid,</if>
            <if test="ordertime != null">ordertime,</if>
            <if test="total != null">total,</if>
            <if test="state != null">state,</if>
            <if test="address != null">address,</if>
            <if test="name != null">name,</if>
            <if test="telephone != null">telephone,</if>
            <if test="uid != null">uid,</if>
            <if test="assess != null">assess,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="oid != null">#{oid,jdbcType=VARCHAR},</if>
            <if test="ordertime != null">#{ordertime,jdbcType=TIMESTAMP},</if>
            <if test="total != null">#{total,jdbcType=DOUBLE},</if>
            <if test="state != null">#{state,jdbcType=INTEGER},</if>
            <if test="address != null">#{address,jdbcType=VARCHAR},</if>
            <if test="name != null">#{name,jdbcType=VARCHAR},</if>
            <if test="telephone != null">#{telephone,jdbcType=VARCHAR},</if>
            <if test="uid != null">#{uid,jdbcType=VARCHAR},</if>
            <if test="assess != null">#{assess,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.gec.bean.Orders">
        update orders
        <set>
            <if test="ordertime != null">
                ordertime = #{ordertime,jdbcType=TIMESTAMP},
            </if>
            <if test="total != null">
                total = #{total,jdbcType=DOUBLE},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=VARCHAR},
            </if>
            <if test="assess != null">
                assess = #{assess,jdbcType=VARCHAR},
            </if>
        </set>
        where oid = #{oid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.gec.bean.Orders">
        update orders
        set ordertime = #{ordertime,jdbcType=TIMESTAMP},
            total     = #{total,jdbcType=DOUBLE},
            state     = #{state,jdbcType=INTEGER},
            address   = #{address,jdbcType=VARCHAR},
            name      = #{name,jdbcType=VARCHAR},
            telephone = #{telephone,jdbcType=VARCHAR},
            uid       = #{uid,jdbcType=VARCHAR},
            assess    = #{assess,jdbcType=VARCHAR}
        where oid = #{oid,jdbcType=VARCHAR}
    </update>

    <!-- 返回对象或者list数据中包含一个对象的list集合-->
    <sql id="OrderItem_Column_List">
        oi
        .
        itemid
        ,
        oi.count,
        oi.subtotal,
        oi.pid,
        oi.oid
    </sql>

    <!--多表查询 左连接-->
    <!--根据uid查询我的订单-->
    <select id="findUserOrdersByUid" parameterType="string" resultMap="BaseResultMap">
        select *
        from orders
                 Left join orderitem on orders.oid = orderitem.oid
                 left join product on orderitem.pid = product.pid
        where orders.uid = #{value} order by orders.ordertime desc
    </select>

    <!--查看所有订单-->
    <select id="findUserAllOrders" resultMap="BaseResultMap">
        select *
        from orders
                 Left join orderitem on orders.oid = orderitem.oid
                 left join product on orderitem.pid = product.pid
        order by orders.ordertime desc
    </select>

    <select id="findOrdersByOid" parameterType="string" resultMap="BaseResultMap">
        select *
        from orders
        Left join orderitem on orders.oid = orderitem.oid
        left join product on orderitem.pid = product.pid
        where orders.oid = #{value}
    </select>
</mapper>
